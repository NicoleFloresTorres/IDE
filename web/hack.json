{
    "ast": {
        "type": "program",
        "body": [
            {
                "type": "starting_point",
                "body": [
                    {
                        "type": "declaration",
                        "data_type": "int",
                        "declarations": [
                            {
                                "name": "x",
                                "array_size": null,
                                "initializer": null
                            },
                            {
                                "name": "y",
                                "array_size": null,
                                "initializer": null
                            },
                            {
                                "name": "z",
                                "array_size": null,
                                "initializer": null
                            }
                        ]
                    },
                    {
                        "type": "declaration",
                        "data_type": "float",
                        "declarations": [
                            {
                                "name": "a",
                                "array_size": null,
                                "initializer": null
                            },
                            {
                                "name": "b",
                                "array_size": null,
                                "initializer": null
                            },
                            {
                                "name": "c",
                                "array_size": null,
                                "initializer": null
                            }
                        ]
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "suma"
                            },
                            "right": {
                                "type": "integer_literal",
                                "value": 45
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "x"
                            },
                            "right": {
                                "type": "float_literal",
                                "value": 32.32
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "x"
                            },
                            "right": {
                                "type": "integer_literal",
                                "value": 23
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "y"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "-",
                                "left": {
                                    "type": "binary_expression",
                                    "operator": "+",
                                    "left": {
                                        "type": "integer_literal",
                                        "value": 2
                                    },
                                    "right": {
                                        "type": "integer_literal",
                                        "value": 3
                                    }
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 1
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "z"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "+",
                                "left": {
                                    "type": "identifier",
                                    "name": "y"
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 7
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "y"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "+",
                                "left": {
                                    "type": "identifier",
                                    "name": "y"
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 1
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "a"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "-",
                                "left": {
                                    "type": "binary_expression",
                                    "operator": "+",
                                    "left": {
                                        "type": "binary_expression",
                                        "operator": "-",
                                        "left": {
                                            "type": "binary_expression",
                                            "operator": "+",
                                            "left": {
                                                "type": "float_literal",
                                                "value": 24
                                            },
                                            "right": {
                                                "type": "integer_literal",
                                                "value": 4
                                            }
                                        },
                                        "right": {
                                            "type": "binary_expression",
                                            "operator": "*",
                                            "left": {
                                                "type": "binary_expression",
                                                "operator": "/",
                                                "left": {
                                                    "type": "integer_literal",
                                                    "value": 1
                                                },
                                                "right": {
                                                    "type": "integer_literal",
                                                    "value": 3
                                                }
                                            },
                                            "right": {
                                                "type": "integer_literal",
                                                "value": 2
                                            }
                                        }
                                    },
                                    "right": {
                                        "type": "integer_literal",
                                        "value": 34
                                    }
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 1
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "x"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "*",
                                "left": {
                                    "type": "binary_expression",
                                    "operator": "-",
                                    "left": {
                                        "type": "integer_literal",
                                        "value": 5
                                    },
                                    "right": {
                                        "type": "integer_literal",
                                        "value": 3
                                    }
                                },
                                "right": {
                                    "type": "binary_expression",
                                    "operator": "/",
                                    "left": {
                                        "type": "integer_literal",
                                        "value": 8
                                    },
                                    "right": {
                                        "type": "integer_literal",
                                        "value": 2
                                    }
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "y"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "-",
                                "left": {
                                    "type": "binary_expression",
                                    "operator": "-",
                                    "left": {
                                        "type": "binary_expression",
                                        "operator": "+",
                                        "left": {
                                            "type": "integer_literal",
                                            "value": 5
                                        },
                                        "right": {
                                            "type": "integer_literal",
                                            "value": 3
                                        }
                                    },
                                    "right": {
                                        "type": "binary_expression",
                                        "operator": "/",
                                        "left": {
                                            "type": "binary_expression",
                                            "operator": "*",
                                            "left": {
                                                "type": "integer_literal",
                                                "value": 2
                                            },
                                            "right": {
                                                "type": "integer_literal",
                                                "value": 4
                                            }
                                        },
                                        "right": {
                                            "type": "integer_literal",
                                            "value": 7
                                        }
                                    }
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 9
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "z"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "+",
                                "left": {
                                    "type": "binary_expression",
                                    "operator": "/",
                                    "left": {
                                        "type": "integer_literal",
                                        "value": 8
                                    },
                                    "right": {
                                        "type": "integer_literal",
                                        "value": 2
                                    }
                                },
                                "right": {
                                    "type": "binary_expression",
                                    "operator": "*",
                                    "left": {
                                        "type": "integer_literal",
                                        "value": 15
                                    },
                                    "right": {
                                        "type": "integer_literal",
                                        "value": 4
                                    }
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "y"
                            },
                            "right": {
                                "type": "float_literal",
                                "value": 14.54
                            }
                        }
                    },
                    {
                        "type": "if_statement",
                        "condition": {
                            "type": "binary_expression",
                            "operator": ">",
                            "left": {
                                "type": "integer_literal",
                                "value": 2
                            },
                            "right": {
                                "type": "integer_literal",
                                "value": 3
                            }
                        },
                        "then_branch": {
                            "type": "expression_statement",
                            "expression": {
                                "type": "assignment_expression",
                                "operator": "=",
                                "left": {
                                    "type": "identifier",
                                    "name": "y"
                                },
                                "right": {
                                    "type": "binary_expression",
                                    "operator": "+",
                                    "left": {
                                        "type": "identifier",
                                        "name": "a"
                                    },
                                    "right": {
                                        "type": "integer_literal",
                                        "value": 3
                                    }
                                }
                            }
                        },
                        "else_branch": {
                            "type": "if_statement",
                            "condition": {
                                "type": "binary_expression",
                                "operator": "&&",
                                "left": {
                                    "type": "binary_expression",
                                    "operator": ">",
                                    "left": {
                                        "type": "integer_literal",
                                        "value": 4
                                    },
                                    "right": {
                                        "type": "integer_literal",
                                        "value": 2
                                    }
                                },
                                "right": {
                                    "type": "identifier",
                                    "name": "true"
                                }
                            },
                            "then_branch": {
                                "type": "expression_statement",
                                "expression": {
                                    "type": "assignment_expression",
                                    "operator": "=",
                                    "left": {
                                        "type": "identifier",
                                        "name": "b"
                                    },
                                    "right": {
                                        "type": "float_literal",
                                        "value": 3.2
                                    }
                                }
                            },
                            "else_branch": {
                                "type": "expression_statement",
                                "expression": {
                                    "type": "assignment_expression",
                                    "operator": "=",
                                    "left": {
                                        "type": "identifier",
                                        "name": "b"
                                    },
                                    "right": {
                                        "type": "float_literal",
                                        "value": 5
                                    }
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "y"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "+",
                                "left": {
                                    "type": "identifier",
                                    "name": "y"
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 1
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "a"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "+",
                                "left": {
                                    "type": "identifier",
                                    "name": "a"
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 1
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "c"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "-",
                                "left": {
                                    "type": "identifier",
                                    "name": "c"
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 1
                                }
                            }
                        }
                    },
                    {
                        "type": "expression_statement",
                        "expression": {
                            "type": "assignment_expression",
                            "operator": "=",
                            "left": {
                                "type": "identifier",
                                "name": "x"
                            },
                            "right": {
                                "type": "binary_expression",
                                "operator": "+",
                                "left": {
                                    "type": "integer_literal",
                                    "value": 3
                                },
                                "right": {
                                    "type": "integer_literal",
                                    "value": 4
                                }
                            }
                        }
                    },
                    {
                        "type": "do_until_statement",
                        "body": {
                            "type": "compound_statement",
                            "body": [
                                {
                                    "type": "expression_statement",
                                    "expression": {
                                        "type": "assignment_expression",
                                        "operator": "=",
                                        "left": {
                                            "type": "identifier",
                                            "name": "y"
                                        },
                                        "right": {
                                            "type": "binary_expression",
                                            "operator": "+",
                                            "left": {
                                                "type": "binary_expression",
                                                "operator": "*",
                                                "left": {
                                                    "type": "binary_expression",
                                                    "operator": "+",
                                                    "left": {
                                                        "type": "identifier",
                                                        "name": "y"
                                                    },
                                                    "right": {
                                                        "type": "integer_literal",
                                                        "value": 1
                                                    }
                                                },
                                                "right": {
                                                    "type": "integer_literal",
                                                    "value": 2
                                                }
                                            },
                                            "right": {
                                                "type": "integer_literal",
                                                "value": 1
                                            }
                                        }
                                    }
                                },
                                {
                                    "type": "while_statement",
                                    "condition": {
                                        "type": "binary_expression",
                                        "operator": ">",
                                        "left": {
                                            "type": "identifier",
                                            "name": "x"
                                        },
                                        "right": {
                                            "type": "integer_literal",
                                            "value": 7
                                        }
                                    },
                                    "body": {
                                        "type": "compound_statement",
                                        "body": [
                                            {
                                                "type": "expression_statement",
                                                "expression": {
                                                    "type": "assignment_expression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "identifier",
                                                        "name": "x"
                                                    },
                                                    "right": {
                                                        "type": "binary_expression",
                                                        "operator": "+",
                                                        "left": {
                                                            "type": "integer_literal",
                                                            "value": 6
                                                        },
                                                        "right": {
                                                            "type": "binary_expression",
                                                            "operator": "/",
                                                            "left": {
                                                                "type": "binary_expression",
                                                                "operator": "*",
                                                                "left": {
                                                                    "type": "binary_expression",
                                                                    "operator": "/",
                                                                    "left": {
                                                                        "type": "integer_literal",
                                                                        "value": 8
                                                                    },
                                                                    "right": {
                                                                        "type": "integer_literal",
                                                                        "value": 9
                                                                    }
                                                                },
                                                                "right": {
                                                                    "type": "integer_literal",
                                                                    "value": 8
                                                                }
                                                            },
                                                            "right": {
                                                                "type": "integer_literal",
                                                                "value": 3
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            {
                                                "type": "expression_statement",
                                                "expression": {
                                                    "type": "identifier",
                                                    "name": "x"
                                                }
                                            },
                                            {
                                                "type": "expression_statement",
                                                "expression": {
                                                    "type": "assignment_expression",
                                                    "operator": "=",
                                                    "left": {
                                                        "type": "identifier",
                                                        "name": "mas"
                                                    },
                                                    "right": {
                                                        "type": "binary_expression",
                                                        "operator": "/",
                                                        "left": {
                                                            "type": "integer_literal",
                                                            "value": 36
                                                        },
                                                        "right": {
                                                            "type": "integer_literal",
                                                            "value": 7
                                                        }
                                                    }
                                                }
                                            }
                                        ]
                                    }
                                },
                                {
                                    "type": "expression_statement",
                                    "expression": {
                                        "type": "binary_expression",
                                        "operator": "==",
                                        "left": {
                                            "type": "identifier",
                                            "name": "y"
                                        },
                                        "right": {
                                            "type": "integer_literal",
                                            "value": 5
                                        }
                                    }
                                }
                            ]
                        },
                        "condition": null,
                        "line": 30
                    },
                    {
                        "type": "while_statement",
                        "condition": {
                            "type": "binary_expression",
                            "operator": "==",
                            "left": {
                                "type": "identifier",
                                "name": "y"
                            },
                            "right": {
                                "type": "integer_literal",
                                "value": 0
                            }
                        },
                        "body": {
                            "type": "compound_statement",
                            "body": [
                                {
                                    "type": "expression_statement",
                                    "expression": {
                                        "type": "identifier",
                                        "name": "mas"
                                    }
                                },
                                {
                                    "type": "expression_statement",
                                    "expression": {
                                        "type": "identifier",
                                        "name": "x"
                                    }
                                }
                            ]
                        }
                    }
                ]
            }
        ]
    },
    "errors": [
        {
            "error_message": "C syntax doesn't use 'then' keyword. Found 'then'",
            "line": 15,
            "column": 12
        },
        {
            "error_message": "C syntax doesn't use 'then' keyword. Found 'then'",
            "line": 18,
            "column": 24
        },
        {
            "error_message": "C syntax doesn't use 'end' keyword. Found 'end'",
            "line": 22,
            "column": 9
        },
        {
            "error_message": "Invalid keyword: 'end'. Found 'end'",
            "line": 24,
            "column": 5
        },
        {
            "error_message": "C syntax doesn't use 'then' keyword. Found 'then'",
            "line": 15,
            "column": 12
        },
        {
            "error_message": "C syntax doesn't use 'then' keyword. Found 'then'",
            "line": 18,
            "column": 24
        },
        {
            "error_message": "C syntax doesn't use 'end' keyword. Found 'end'",
            "line": 22,
            "column": 9
        },
        {
            "error_message": "Invalid keyword: 'end'. Found 'end'",
            "line": 24,
            "column": 5
        }
    ]
}